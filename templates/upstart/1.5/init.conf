description     "{{{ description }}}"
start on filesystem or runlevel [2345]
stop on runlevel [!2345]

{{#envs}}
env {{key}}={{value}}
{{/envs}}

respawn
umask {{{umask}}}
{{#nice}}
nice {{{nice}}}
{{/nice}}
{{#chroot}}
chroot {{{chroot}}}
{{/chroot}}
{{#chdir}}
chdir {{{chdir}}}
{{/chdir}}
{{#limit_coredump}}
limit core {{{limit_coredump}}} {{{limit_coredump}}}
{{/limit_coredump}}
{{#limit_cputime}}
limit cpu {{{limit_cputime}}} {{{limit_cputime}}}
{{/limit_cputime}}
{{#limit_data}}
limit data {{{limit_data}}} {{{limit_data}}}
{{/limit_data}}
{{#limit_file_size}}
limit fsize {{{limit_file_size}}} {{{limit_file_size}}}
{{/limit_file_size}}
{{#limit_locked_memory}}
limit memlock {{{limit_locked_memory}}} {{{limit_locked_memory}}}
{{/limit_locked_memory}}
#limit msgqueue <softlimit> <hardlimit>
#limit nice <softlimit> <hardlimit>
{{#limit_open_files}}
limit nofile {{{limit_open_files}}} {{{limit_open_files}}}
{{/limit_open_files}}
{{#limit_user_processes}}
limit nproc {{{limit_user_processes}}} {{{limit_user_processes}}}
{{/limit_user_processes}}
{{#limit_physical_memory}}
limit rss {{{limit_physical_memory}}} {{{limit_physical_memory}}}
{{/limit_physical_memory}}
#limit rtprio <softlimit> <hardlimit>
#limit sigpending <softlimit> <hardlimit>
{{#limit_stack_size}}
limit stack {{{limit_stack_size}}} {{{limit_stack_size}}}
{{/limit_stack_size}}
setuid {{{user}}}
setgid {{{group}}}
console log # log stdout/stderr to /var/log/upstart/

{{#prestart}}
pre-start script
  {{{ prestart }}}

  status=$?
  if [ "$status" -gt 0 ] ; then
    echo "Prestart command failed with code $status."

    # Per init(5) docs, simply calling 'stop' will abort this start.
    stop
  fi
end script
{{/prestart}}

exec {{{program}}} {{{shell_args}}}
